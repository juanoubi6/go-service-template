{
    "swagger": "2.0",
    "info": {
        "description": "Sample service that creates \"locations\"",
        "title": "Swagger go-service-template API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/health": {
            "get": {
                "description": "Simple healthcheck endpoint",
                "produces": [
                    "text/plain"
                ],
                "summary": "Check health",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1/locations": {
            "get": {
                "description": "Get paginated locations",
                "produces": [
                    "application/json"
                ],
                "summary": "GETPaginatedLocationsEndpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional location name section. Service will filter locations that include this string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination limit, default to 10000",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor value, default to empty string",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Indicates the cursor direction. Accepted values: 'next' or 'prev'",
                        "name": "direction",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.ExampleCursorPage"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new location and a default sub location",
                "produces": [
                    "application/json"
                ],
                "summary": "POSTCreateLocationEndpoint",
                "parameters": [
                    {
                        "description": "Location attributes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Location"
                            }
                        }
                    }
                }
            }
        },
        "/v1/locations/{locationID}": {
            "get": {
                "description": "Get location details",
                "produces": [
                    "application/json"
                ],
                "summary": "GETLocationDetailsEndpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "locationID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Location"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing location",
                "produces": [
                    "application/json"
                ],
                "summary": "PUTUpdateLocationEndpoint",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location ID",
                        "name": "locationID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Location attributes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Location"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.ContactInformation": {
            "type": "object",
            "properties": {
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "domain.ExampleCursorPage": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {}
                },
                "limit": {
                    "type": "integer"
                },
                "next_page": {
                    "type": "string"
                },
                "previous_page": {
                    "type": "string"
                }
            }
        },
        "domain.Location": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "information": {
                    "$ref": "#/definitions/domain.LocationInformation"
                },
                "location_type": {
                    "$ref": "#/definitions/domain.LocationType"
                },
                "name": {
                    "type": "string"
                },
                "supplier": {
                    "$ref": "#/definitions/domain.Supplier"
                }
            }
        },
        "domain.LocationInformation": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_information": {
                    "$ref": "#/definitions/domain.ContactInformation"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "domain.LocationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "domain.Supplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateLocationRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "location_type_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateLocationRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "contact_person": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location_type_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "supplier_id": {
                    "type": "integer"
                },
                "zipcode": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "API endpoints",
            "name": "go-service-template"
        }
    ]
}